#!/usr/bin/env python3
"""Test script to verify the complete comment functionality fix.

This script tests the end-to-end comment addition via the API.
"""

import requests


def test_comment_api():
    """Test the comment API endpoint."""
    print("=== Testing Comment API ===")

    test_cases = [
        {
            "input": "comment on JCAI-122 'End-to-end test comment 1'",
            "description": "Standard comment syntax",
        },
        {
            "input": "add comment to JCAI-122 'End-to-end test comment 2'",
            "description": "Alternative comment syntax",
        },
    ]

    all_passed = True

    for i, test_case in enumerate(test_cases, 1):
        print(f"\nTest {i}: {test_case['description']}")
        print(f"  Input: {test_case['input']}")
        try:
            # Make API call
            response = requests.post(
                "http://localhost:8000/api/chat/message/test_user_123",
                json={"text": test_case["input"]},
                headers={"Content-Type": "application/json"},
                timeout=15,
            )

            print(f"  Status Code: {response.status_code}")

            if response.status_code == 200:
                response_data = response.json()
                response_text = response_data.get("response", "")
                print(
                    f"  Response: {response_text[:200]}{'...' if len(response_text) > 200 else ''}"
                )  # Check if the response indicates comment success
                response_lower = response_text.lower()
                if "comment" in response_lower and (
                    "added" in response_lower or "successfully" in response_lower
                ):
                    print("  ‚úÖ PASSED: Comment appears to have been added successfully")
                elif "error" in response_lower or "failed" in response_lower:
                    print(f"  ‚ùå FAILED: Response indicates error - {response_text}")
                    all_passed = False
                else:
                    print(
                        "  ‚ö†Ô∏è  UNCLEAR: Response doesn't clearly indicate success or failure"
                    )
                    print(f"     Full response: {response_text}")
                    # Don't mark as failed since it might have worked
            else:
                print(f"  ‚ùå FAILED: HTTP {response.status_code}")
                print(f"  Response: {response.text}")
                all_passed = False

        except requests.exceptions.ConnectionError:
            print(
                "  ‚ùå FAILED: Could not connect to server. Is it running on localhost:8000?"
            )
            all_passed = False
            return False
        except Exception as e:
            print(f"  ‚ùå ERROR: {e}")
            all_passed = False

    return all_passed


def main():
    """Run the test."""
    print("Testing Complete Comment Functionality Fix")
    print("=" * 50)

    # Test API Integration
    api_passed = test_comment_api()

    # Summary
    print("\n" + "=" * 50)
    print("SUMMARY:")
    print(f"API Integration: {'‚úÖ PASSED' if api_passed else '‚ùå FAILED'}")

    if api_passed:
        print("\nüéâ ALL TESTS PASSED! Comment functionality is working correctly.")
        print("\nThe fix successfully resolved the issue where comment commands")
        print(
            "were being treated as create issue commands instead of add comment commands."
        )
        return 0
    else:
        print("\n‚ùå Some tests failed. Check the output above for details.")
        return 1


if __name__ == "__main__":
    exit(main())
